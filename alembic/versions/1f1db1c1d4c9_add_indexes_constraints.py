"""add indexes & constraints

Revision ID: 1f1db1c1d4c9
Revises: 
Create Date: 2025-08-07 23:35:02.485831

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1f1db1c1d4c9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('categories', 'name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.create_index('ix_categories_department_id', 'categories', ['department_id'], unique=False)
    op.create_index('ix_categories_name', 'categories', ['name'], unique=False)
    op.create_unique_constraint('uq_categories_department_name', 'categories', ['department_id', 'name'])
    op.drop_constraint('categories_department_id_fkey', 'categories', type_='foreignkey')
    op.create_foreign_key(None, 'categories', 'departments', ['department_id'], ['id'], ondelete='RESTRICT')
    op.alter_column('departments', 'name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.drop_constraint('departments_name_key', 'departments', type_='unique')
    op.create_index('ix_departments_name', 'departments', ['name'], unique=False)
    op.create_unique_constraint('uq_departments_name', 'departments', ['name'])
    op.alter_column('products', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=False)
    op.drop_constraint('products_name_key', 'products', type_='unique')
    op.create_index('ix_products_category_id', 'products', ['category_id'], unique=False)
    op.create_index('ix_products_name', 'products', ['name'], unique=False)
    op.create_index('ix_products_price', 'products', ['price'], unique=False)
    op.create_unique_constraint('uq_products_name', 'products', ['name'])
    op.drop_constraint('products_category_id_fkey', 'products', type_='foreignkey')
    op.create_foreign_key(None, 'products', 'categories', ['category_id'], ['id'], ondelete='RESTRICT')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'products', type_='foreignkey')
    op.create_foreign_key('products_category_id_fkey', 'products', 'categories', ['category_id'], ['id'])
    op.drop_constraint('uq_products_name', 'products', type_='unique')
    op.drop_index('ix_products_price', table_name='products')
    op.drop_index('ix_products_name', table_name='products')
    op.drop_index('ix_products_category_id', table_name='products')
    op.create_unique_constraint('products_name_key', 'products', ['name'])
    op.alter_column('products', 'price',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.drop_constraint('uq_departments_name', 'departments', type_='unique')
    op.drop_index('ix_departments_name', table_name='departments')
    op.create_unique_constraint('departments_name_key', 'departments', ['name'])
    op.alter_column('departments', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_constraint(None, 'categories', type_='foreignkey')
    op.create_foreign_key('categories_department_id_fkey', 'categories', 'departments', ['department_id'], ['id'])
    op.drop_constraint('uq_categories_department_name', 'categories', type_='unique')
    op.drop_index('ix_categories_name', table_name='categories')
    op.drop_index('ix_categories_department_id', table_name='categories')
    op.alter_column('categories', 'name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    # ### end Alembic commands ###
